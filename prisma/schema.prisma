datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Source {
  id           String     @id @default(cuid())
  name         String
  url          String     @unique
  type         String     @default("AUTO")
  enabled      Boolean    @default(true)
  rules        String?
  etag         String?
  lastModified DateTime?
  lastFetched  DateTime?
  // Beta: Full-text extraction settings
  extractFullText Boolean @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  articles     Article[]
  categories   Category[] @relation("SourcesOnCategories")
  ingestLogs   IngestLog[]
}

model Article {
  id           String        @id @default(cuid())
  sourceId     String
  source       Source        @relation(fields: [sourceId], references: [id])
  title        String
  url          String
  canonicalUrl String
  hash         String        @unique
  publishedAt  DateTime?
  createdAt    DateTime      @default(now())
  language     String?
  summary      String?
  status       String        @default("UNREAD")
  openedAt     DateTime?
  score        Int?
  // Beta: Full-text content
  content      String?       // Pilnas straipsnio tekstas
  extractedAt  DateTime?     // Kada buvo i≈°trauktas pilnas tekstas
  // Beta: Duplicate detection enhancement
  urlHash      String?       @unique // Papildomas hash URL + title kombinacijai
}

model SavedView {
  id         String   @id @default(cuid())
  name       String
  filter     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Category {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sources   Source[] @relation("SourcesOnCategories")
}

// Beta: Monitoring and analytics
model IngestLog {
  id          String   @id @default(cuid())
  sourceId    String
  status      String   // SUCCESS, ERROR, PARTIAL
  errorMessage String?
  itemsFound  Int      @default(0)
  itemsCreated Int     @default(0)
  duration    Int?     // milliseconds
  createdAt   DateTime @default(now())
  source      Source   @relation(fields: [sourceId], references: [id])
}
